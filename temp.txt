{

'sys-init': 
{'host': 'hello', 'proj2rm': ['000', 'Demographics', 'NRB_6_21_14'], 'convprogs': ['Dimon', 'to3d', 'dcm2nii', 'dcm2niix'], 'scan-quality': ['usable', 'unknown', 'questionable', 'unusable'], 'loglevel': 'detail'}, 

'down-init': {'pathprefix-linux': '/prot/%PROJ%', 'pathprefix-win': '%PROJ%', 'fileprefix': '%SCAN%', 'cmbpath': ['PROJ', 'SUBJ', 'SESS', 'SCAN'], 'cleanup': ['dimon.files', 'GERT_Reco']}, 

'upload-init': {'res_names': ['MRSI', 'TASKDATA']}

}



def random_number_generator(arg1, arg2):
    """
    Summary line.

    Extended description of function.

    Parameters
    ----------
    arg1 : int
        Description of arg1
    arg2 : str
        Description of arg2

    Returns
    -------
    int
        Description of return value

    """
    return 42



====================

# Set up session
sess = requests.Session()
sess.verify = False
sess.auth = (args.user,args.password)
#sess.auth= (os.environ['XNAT_USER'],os.environ['XNAT_PASS'])

def get(url,**kwargs):
    try:
        r = sess.get( url, **kwargs )
        r.raise_for_status()
    except (requests.ConnectionError, requests.exceptions.RequestException) as e:
        print "Request Failed"
        print "    " + str( e )
        sys.exit(1)
    return r

# Get list of scan ids
print "Get scan list for session ID %s." % session
r = get( host+"/data/experiments/%s/scans?format=json"%session )
scanRequestResultList = r.json()["ResultSet"]["Result"]
scanIDList = [scan['ID'] for scan in scanRequestResultList]
#print scanRequestResultList
print 'Found scans %s.'%', '.join(scanIDList)
#Making QC File
f_name = "QC-" + QC_VERSION + '-' + QC_DATE + '.csv'
sess_file = open(os.path.join(dicomdir, f_name), 'w')
sess_file.write(QC_HEADER)

for scan in scanRequestResultList:
    print
    print 'Beginning process for scan %s.'%scan['ID']
    print scan['series_description']
    if not re.search("EP",scan['series_description']): #If not EP scan then continue
        continue

    # Get scan resources
    print "Get scan resources for scan %s." % scan['ID']
    r = get(host + "/data/experiments/%s/scans/%s/resources?format=json" % (session, scan['ID']))
    scanResources = r.json()["ResultSet"]["Result"]
    print 'Found resources %s.' % ', '.join(res["label"] for res in scanResources)

    dicomResourceList = [res for res in scanResources if res["label"]=="DICOM"]
    if len(dicomResourceList) == 0:
        print "Scan %s has no DICOM resource. Skipping." % scan['ID']
        # scanInfo['hasDicom'] = False
        continue
    elif len(dicomResourceList) > 1:
        print "Scan %s has more than one DICOM resource. Skipping." % scan['ID']
        # scanInfo['hasDicom'] = False
        continue
